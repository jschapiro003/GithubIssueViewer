'use strict';Object.defineProperty(exports, '__esModule', { value: true }); // istanbul ignore next
function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { 'default': obj };}var _react = require('react');var _react2 = _interopRequireDefault(_react);var _reactRouter = require('react-router');var _reactRouter2 = _interopRequireDefault(_reactRouter);var _IssueStoreJs = require(

'../IssueStore.js');var _IssueStoreJs2 = _interopRequireDefault(_IssueStoreJs);

var IssueView = _react2['default'].createClass({ displayName: 'IssueView', 
	getInitialState: function getInitialState() {
		return { 
			comments: [], 
			loading: true };}, 


	componentDidMount: function componentDidMount() {
		var self = this;
		this.getIssueComments(this.props.params.number, function (err, res) {
			var comments = [];
			if (err) {
				console.log(err);}

			if (res) {
				console.log('comments', res);
				res.forEach(function (comment) {
					console.log('comment', comment);
					comments.push(comment);
					self.setState({ comments: comments });});}});}, 




	componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		console.log('next props for issue: ', nextProps);}, 


	getIssueComments: function getIssueComments(issueNumber, cb) {
		var req = new XMLHttpRequest();
		var url = 'https://api.github.com/repos/npm/npm/issues/' + issueNumber + '/comments';
		req.onload = function () {
			if (req.status === 404) {
				cb(new Error('not found'));} else 
			{
				cb(null, JSON.parse(req.response));}};


		req.open('GET', url);
		req.send();}, 


	getIssueState: function getIssueState(state) {
		if (state === 'open') {
			return _react2['default'].createElement('span', { style: styles.openIssue }, ' OPEN ');} else 
		{
			return _react2['default'].createElement('span', { style: styles.closedIssue }, ' CLOSED ');}}, 



	render: function render() {
		var self = this;
		var issue = undefined;
		//issue number retrieved based on url not on property passed in through Link!

		issue = _IssueStoreJs2['default'].getIssue(this.props.params.number);
		if (!issue) {
			return _react2['default'].createElement('div', null, ' ');}


		var issueLabels = issue && issue.labels ? issue.labels.map(function (label) {
			var labelColor = '#' + label.color;
			return _react2['default'].createElement('p', { style: { display: "inline", color: labelColor, fontSize: "12.5" } }, ' ', label.name);}) : 
		_react2['default'].createElement('p', null, ' ');

		var comments = this.state.comments ? this.state.comments.map(function (comment) {

			return (
				_react2['default'].createElement('div', null, 
				_react2['default'].createElement('div', { style: styles.comment_holder }, 
				_react2['default'].createElement('div', { style: styles.comment_icon_holder.style(comment.user.avatar_url) })), 

				_react2['default'].createElement('p', { style: styles.comment_user }, ' ', _react2['default'].createElement('a', { href: comment.user.html_url, target: '_blank' }, ' @', comment.user.login, ' ')), 
				_react2['default'].createElement('p', { style: styles.comment_summary }, ' ', comment.body, ' ')));}) : 



		_react2['default'].createElement('p', null, ' No comments ');
		return (

			_react2['default'].createElement('div', null, 

			_react2['default'].createElement('div', { style: styles.header }, ' GithubIssueViewer.js ', _react2['default'].createElement('img', { src: '../../assets/githubicon.png', width: '25px', height: '25px' }, ' '), ' '), 
			_react2['default'].createElement('div', { key: issue.number, style: styles.issue }, 
			_react2['default'].createElement('p', { style: styles.issue_number }, '#', issue.number || ''), 
			_react2['default'].createElement('div', { style: styles.issue_icon_holder }, 
			_react2['default'].createElement('div', { style: styles.issue_icon.style(issue.user.avatar_url) })), 

			_react2['default'].createElement('div', { style: styles.issue_content }, 
			_react2['default'].createElement('p', { style: styles.issue_title }, issue.title), 
			_react2['default'].createElement('p', { style: styles.issue_username }, '@', issue.user.login), 
			_react2['default'].createElement('p', { style: styles.state }, ' ', self.getIssueState(issue.state), ' '), 
			issueLabels, 
			_react2['default'].createElement('p', { style: styles.issue_summary }, issue.body)), 

			_react2['default'].createElement('div', { style: styles.comments_section }, 
			_react2['default'].createElement('div', null, 
			_react2['default'].createElement('p', { style: { fontWeight: 'bold' } }, ' Comments '), 
			comments)), 



			_react2['default'].createElement(_reactRouter.Link, { to: '/issues', style: styles.backbutton }, ' Back '))));} });








var styles = { 
	header: { 
		backgroundColor: 'white', 
		opacity: ".78", 
		top: 0, 
		width: '100%', 
		height: '15%', 
		paddingTop: '10', 
		paddingBottom: '10', 
		fontSize: 24, 
		fontFamily: 'Tahoma', 
		textAlign: 'center', 
		color: '#f2b632', 
		marginBottom: "25" }, 

	link: { 
		color: "#A9A9A9", 
		textDecoration: "none" }, 

	backbutton: { 
		marginLeft: 10, 
		color: "#A9A9A9" }, 

	issue: { 
		marginTop: 60, 
		marginLeft: 50, 
		marginRight: 50, 
		marginBottom: 10, 
		background: 'white' }, 

	issue_content: { 
		marginLeft: 10, 
		paddingTop: 10, 
		paddingBottom: 30, 
		paddingRight: 10 }, 

	issue_title: { 
		fontSize: 18, 
		fontWeight: 'bold' }, 

	issue_icon_holder: { 
		width: 55, 
		float: 'left', 
		marginTop: 21, 
		marginBottom: 20, 
		marginRight: 15, 
		marginLeft: 25 }, 

	issue_icon: { 
		style: function style(avatar_url) {
			return { 
				width: 55, 
				height: 55, 
				borderRadius: 100, 
				float: 'left', 
				backgroundImage: 'url(' + avatar_url + ')', 
				backgroundSize: 'cover', 
				WebkitBoxShadow: "0 1px 2px rgba(0,0,0,0.3)" };} }, 




	issue_number: { 
		float: 'right', 
		fontSize: 14, 
		marginRight: 10, 
		marginTop: 5 }, 

	issue_username: { 
		fontSize: 16, 
		marginLeft: 40 }, 

	issue_summary: { 
		fontSize: 14, 
		color: '#A9A9A9', 
		marginLeft: "85", 
		marginRight: "85" }, 


	issue_labels: { 
		float: 'right' }, 

	openIssue: { 
		backgroundColor: 'green', 
		color: 'white', 
		float: "left", 
		marginRight: "10" }, 

	closedIssue: { 
		backgroundColor: 'red', 
		color: 'white', 
		float: "left", 
		marginRight: "10" }, 

	comments_section: { 


		backgroundColor: "white", 
		marginTop: 10, 
		marginLeft: "12%", 
		marginRight: "20%", 
		marginBottom: 30, 
		paddingTop: 20, 
		paddingBottom: 20, 
		paddingLeft: 20 }, 



	comment_user: { 
		fontSize: 15, 
		marginLeft: '5%' }, 

	comment_summary: { 
		fontSize: 12, 
		color: "#A9A9A9", 
		marginLeft: '5%' }, 

	comment_icon: { 
		width: 35, 
		float: 'left', 
		marginTop: 21, 
		marginBottom: 20, 
		marginRight: 25, 

		paddingRight: 20 }, 

	comment_icon_holder: { 
		style: function style(avatar_url) {
			return { 
				width: 35, 
				height: 35, 
				borderRadius: 100, 
				float: 'left', 
				backgroundImage: 'url(' + avatar_url + ')', 
				backgroundSize: 'cover', 
				WebkitBoxShadow: "0 1px 2px rgba(0,0,0,0.3)" };} } };exports['default'] = 







IssueView;module.exports = exports['default'];