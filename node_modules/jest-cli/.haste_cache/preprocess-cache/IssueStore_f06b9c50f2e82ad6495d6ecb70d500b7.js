'use strict';var ISSUES_URL = 'https://api.github.com/repos/npm/npm/issues';
var _issues = {};
var _changeListeners = [];
var _initCalled = false;

var IssueStore = module.exports = { 

  init: function init() {
    if (_initCalled) 
    return;

    _initCalled = true;

    getJSON(ISSUES_URL, function (err, res) {

      res.forEach(function (issue) {
        _issues[issue.number] = issue;});


      IssueStore.notifyChange();});}, 




  getIssues: function getIssues() {
    var array = [];

    for (var number in _issues) 
    array.push(_issues[number]);

    return array;}, 


  getIssuesRange: function getIssuesRange(start, end) {
    console.log('getting more issues with range: ', start, end);
    var array = [];
    var start = start;
    var end = end;
    for (var number in _issues) 
    if (start === end) {
      break;} else 
    {
      start++;
      array.push(_issues[number]);}


    return array;}, 


  getIssue: function getIssue(number) {
    return _issues[number];}, 


  notifyChange: function notifyChange() {
    _changeListeners.forEach(function (listener) {
      listener();});}, 



  addChangeListener: function addChangeListener(listener) {
    _changeListeners.push(listener);}, 


  removeChangeListener: function removeChangeListener(listener) {
    _changeListeners = _changeListeners.filter(function (l) {
      return listener !== l;});} };





function getJSON(url, cb) {
  var req = new XMLHttpRequest();
  req.onload = function () {
    if (req.status === 404) {
      cb(new Error('not found'));} else 
    {
      cb(null, JSON.parse(req.response));}};


  req.open('GET', url);
  req.send();}